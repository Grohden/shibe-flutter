"""
Animal type enum
"""
enum Animal {
  birds
  cats
  shibes
}

type AnimalPicture {
  animalType: Animal!
  createdAt: ISO8601DateTime!
  id: ID!
  updatedAt: ISO8601DateTime!
  url: String!
}

"""
The connection type for AnimalPicture.
"""
type AnimalPictureConnection {
  """
  A list of edges.
  """
  edges: [AnimalPictureEdge!]!

  """
  A list of nodes.
  """
  nodes: [AnimalPicture!]!

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
}

"""
An edge in a connection.
"""
type AnimalPictureEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: AnimalPicture
}

"""
Autogenerated return type of DeleteUserPictureTag
"""
type DeleteUserPictureTagPayload {
  deleted: Boolean!
}

"""
An ISO 8601-encoded datetime
"""
scalar ISO8601DateTime

type Mutation {
  """
  Deletes a user_picture_tag by ID
  """
  deleteUserPictureTag(pictureId: ID!, tagId: ID!): DeleteUserPictureTagPayload
  registerAnimalPictures(animalType: Animal!, count: Int): RegisterAnimalPicturesPayload

  """
  Creates a new tag
  """
  registerUserTag(tagInput: RegisterTagInput!): RegisterUserTagPayload

  """
  Creates a new user
  """
  userCreate(userInput: UserInput!): UserCreatePayload
}

"""
Information about pagination in a connection.
"""
type PageInfo {
  """
  When paginating forwards, the cursor to continue.
  """
  endCursor: String

  """
  When paginating forwards, are there more items?
  """
  hasNextPage: Boolean!

  """
  When paginating backwards, are there more items?
  """
  hasPreviousPage: Boolean!

  """
  When paginating backwards, the cursor to continue.
  """
  startCursor: String
}

type Query {
  """
  All animal pictures
  """
  animalPictures(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): AnimalPictureConnection!
  animalPicturesById(pictureId: ID!): AnimalPicture!
  animalPicturesByUserTag(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
    tagId: ID!
    userId: ID!
  ): AnimalPictureConnection!
  tagsByUser(userId: ID!): [Tag!]!
  userTagsByAnimalPicture(pictureId: ID!, userId: ID!): [Tag!]!
}

"""
Autogenerated return type of RegisterAnimalPictures
"""
type RegisterAnimalPicturesPayload {
  animalPictures: [AnimalPicture!]!
}

input RegisterTagInput {
  name: String
  pictureId: ID
  userId: ID
}

"""
Autogenerated return type of RegisterUserTag
"""
type RegisterUserTagPayload {
  tag: Tag!
}

type Tag {
  animalPictures: [AnimalPicture!]!
  createdAt: ISO8601DateTime!
  id: ID!
  name: String!
  updatedAt: ISO8601DateTime!
  user: User!
}

type User {
  createdAt: ISO8601DateTime!
  id: ID!
  name: String!
  tags: [Tag!]!
  updatedAt: ISO8601DateTime!
}

"""
Autogenerated return type of UserCreate
"""
type UserCreatePayload {
  user: User!
}

input UserInput {
  name: String
}
